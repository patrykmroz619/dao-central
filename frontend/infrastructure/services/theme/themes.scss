@use "sass:map";

$defaultTheme: "LIGHT";

$themes: (
  "LIGHT": (
    "primary": #4548f7,
    "primary-light": lighten(#4548f7, 10%),
    "primary-dark": darken(#4548f7, 10%),
    "primary-inverted": #f6f8fa,
    "background": #f6f8fa,
    "box": #ffffff,
    "text": #4d4d4d,
    "heading": #1b1b1b,
    "gray-500": #aaa,
    "gray-light": lighten(#aaa, 20%),
    "gray-darken": darken(#aaa, 20%),
    "danger": red,
    "danger-light": lighten(red, 45%),
    "success": green,
    "success-light": lighten(green, 45%),
  ),
  "DARK": (
    "primary": green,
    "primary-light": lighten(#4548f7, 10%),
    "primary-dark": darken(#4548f7, 10%),
    "primary-inverted": #f6f8fa,
    "background": black,
    "box": #ffffff,
    "text": #4d4d4d,
    "heading": #1b1b1b,
    "gray-500": #aaa,
    "gray-light": lighten(#aaa, 20%),
    "gray-darken": darken(#aaa, 20%),
    "danger": red,
    "danger-light": lighten(red, 45%),
    "success": green,
    "success-light": lighten(green, 45%),
  ),
);
@mixin theme-variables {
  @each $themeName, $themeMap in $themes {
    @if $themeName == $defaultTheme {
      :root {
        @each $color, $colorValue in $themeMap {
          --#{$color}: #{$colorValue};
        }
      }
    } @else {
      [data-theme="#{$themeName}"] {
        @each $color, $colorValue in $themeMap {
          --#{$color}: #{$colorValue};
        }
      }
    }
  }
}

@function get-color($colorName, $theme: null) {
  @if $theme == null {
    @if map.get((map.get($themes, $defaultTheme)), $colorName) == null {
      @error "Color #{$colorName} not found";
    }
    @return var(--#{$colorName});
  }

  $colorValue: map.get((map.get($themes, $theme)), $colorName);

  @if $colorValue != null {
    @return $colorValue;
  } @else {
    @error "Color #{$colorName} for theme #{$theme} not found";
  }
}
